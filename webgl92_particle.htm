<html>
<head>
<title>GLC WebGL</title>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">

<script language="javascript" type="text/javascript" src="./webgl_util.js"></script>
<script language="javascript" type="text/javascript" src="rsc/gsd_geo.js"></script>

<script id="shader-vs" type="x-shader/x-vertex">
	attribute vec4      at_pos;
	attribute vec4      at_dif;

	varying   vec4      vr_dif;

	void main() {
		gl_Position  = vec4(at_pos.xy, 0.0, 1.0);
		gl_PointSize = at_pos.z;

		vr_dif = at_dif;
	}
</script>

<script id="shader-fs" type="x-shader/x-fragment">
    precision mediump float;

	varying   vec4      vr_dif;

	uniform   sampler2D us_tex;

    void main() {

		vec4 ct0     = texture2D(us_tex, gl_PointCoord);
        gl_FragColor = vr_dif * ct0;
    }
</script>


<script type="text/javascript">

// global common variable

var gl;											// gl context object
var mouse = {x: 0, y: 0};						// mouse position

var g_program;									// shader program

var vbo_pos;
var vbo_dif;
var tex_ball;

var vtx_pos = new Array(300*4);
var vtx_dif = new Array(300*4);


function WebGLInit(native_win)
{
	native_win.addEventListener('mousemove', function(e)
	{
		var rect = native_win.getBoundingClientRect();

		mouse.x = e.clientX - rect.left;
		mouse.y = e.clientY - rect.top;

		//document.title= "mouse: " + mouse.x + ", " + mouse.y;
	}, false);

	window.addEventListener('keydown', function(e)
	{
		//document.title= "Keycode: " + e.keyCode;
	}, true);

	setInterval("WebGLRender()", 0);

	gl.clearColor(0.0, 0.4, 0.6, 1.0);


	// create program
	g_program = CreateProgram(gl, "shader-vs", "shader-fs");
	if(null == g_program)
		return;



	for(var i=0; i<300; ++i)
	{
		vtx_pos[i*4+0] = Math.random()*2.0 -1.0					; // x
		vtx_pos[i*4+1] = Math.random()*2.0 -1.0					; // y
		vtx_pos[i*4+2] = 4.0 + Math.random()*20					; // point size
		vtx_pos[i*4+3] = -(1.0 + Math.random()* 5.0) * 0.0004	; // speed

		vtx_dif[i*4+0] = (55.0 + Math.random()* 200.0)/255.0	; // r
		vtx_dif[i*4+1] = (55.0 + Math.random()* 200.0)/255.0	; // g
		vtx_dif[i*4+2] = (55.0 + Math.random()* 200.0)/255.0	; // b
		vtx_dif[i*4+3] = (55.0 + Math.random()* 200.0)/255.0	; // a
	}

	// create VBO
	vbo_pos  = CreateVbo(gl, vtx_pos);
	vbo_dif  = CreateVbo(gl, vtx_dif);

	tex_ball = CreateTexture("rsc/ball.png");
}

function WebGLRender()
{
	for(var i=0; i<300; ++i)
	{
		vtx_pos[i*4+1] += vtx_pos[i*4+3];

		if(-1.0 >vtx_pos[i*4+1])
		{
			vtx_pos[i*4+0] = Math.random()*2.0 -1.0					; // x
			vtx_pos[i*4+1] = 0.5 + Math.random()					; // y
			vtx_pos[i*4+2] = 4.0 + Math.random()*20					; // point size
			vtx_pos[i*4+3] = -(1.0 + Math.random()* 5.0) * 0.0004	; // speed

			vtx_dif[i*4+0] = (55.0 + Math.random()* 200.0)/255.0	; // r
			vtx_dif[i*4+1] = (55.0 + Math.random()* 200.0)/255.0	; // g
			vtx_dif[i*4+2] = (55.0 + Math.random()* 200.0)/255.0	; // b
			vtx_dif[i*4+3] = (55.0 + Math.random()* 200.0)/255.0	; // a
		}
	}

	UpdateVbo(gl, vbo_pos, vtx_pos);
	UpdateVbo(gl, vbo_dif, vtx_dif);


	gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);
	gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);

	gl.disable( gl.DEPTH_TEST);
	gl.disable( gl.CULL_FACE);


	gl.blendFunc(gl.SRC_ALPHA, gl.ONE);
	gl.enable(gl.BLEND);


	UsePrgram(gl, g_program);

	ActiveTexture(gl, g_program, tex_ball   , 0, "us_t0");
	AttributeStream(gl, 0, vbo_pos, 4);
	AttributeStream(gl, 1, vbo_dif, 4);

	DrawArray(gl, gl.POINTS, 0, 300);

	AttributeStream(gl, 0, null, 0);
	AttributeStream(gl, 1, null, 0);

	ActiveTexture(gl, g_program, null, 0);

	UsePrgram(gl, null);

	gl.flush();
}


function WebGLStart()
{
	var native_win = CreateNativeWindow("canvas", 800, 480);

	gl = CreateContext(native_win);
	if(!gl)
	{
		alert("Could not initialise WebGL. check the browser");
		return;
	}

	WebGLInit(native_win);
}
</script>
</head>

<body onload="WebGLStart();">
</body>
</html>
